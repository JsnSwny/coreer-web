import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import Container from "@/components/Container/Container";
import ProfileCardList from "@/components/Card/ProfileCardList/ProfileCardList";
import ProfileCard from "@/components/Card/ProfileCard/ProfileCard";
import { server } from "@/config";
import { useRouter } from "next/router";
import { Profile } from "@/interfaces/profile.model";
import Section from "@/components/Layout/Section/Section";
import { useAuth } from "@/contexts/AuthContext";
import { useEffect } from "react";
import withAuth from "@/components/Route/withAuth";
import axios from "axios";
import cookie from "cookie";

interface HomeProps {
  recommend: Profile[];
}

const Home = ({ recommend }: HomeProps) => {
  const router = useRouter();
  const { user } = useAuth();

  return (
    <>
      <Head>
        <title>coreer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Container>
          <Section title={"Top Picks"}>
            <ProfileCardList large={true}>
              {recommend.map((item) => (
                <ProfileCard profile={item} />
              ))}
            </ProfileCardList>
          </Section>
        </Container>
      </main>
    </>
  );
};

export const getServerSideProps = async (context: any) => {
  const { req } = context;
  const cookies = cookie.parse(req.headers.cookie || "");
  const token = cookies.token;

  const config = {
    headers: {
      "Content-Type": "application/json",
    },
  };

  let recommend = [];

  if (token) {
    config.headers["Authorization"] = `Token ${token}`;
    const recommendationsRes = await fetch(`${server}/recommend/5`, config);

    recommend = await recommendationsRes.json();
  }

  return {
    props: {
      recommend: token ? recommend.recommendations : [],
    },
  };
};

export default withAuth(Home);
